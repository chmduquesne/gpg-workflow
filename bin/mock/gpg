#!/bin/bash

# mock the real gpg for testing purpose

red(){
    echo -e "\033[0;31m$@\033[0m"
}

# Remove first component from PATH so that we call the real gpg
export PATH=$(echo $PATH|cut -d: -f2-)

GPG_MAJOR=$(gpg --version | head -n1 | cut -d' ' -f3 | cut -d '.' -f1)
GPG_MINOR=$(gpg --version | head -n1 | cut -d' ' -f3 | cut -d '.' -f2)
GPG_PATCH=$(gpg --version | head -n1 | cut -d' ' -f3 | cut -d '.' -f3)

# We need version 2.2.+
if [ "$GPG_MAJOR" != 2 -o "$GPG_MINOR" -lt 2 ]; then
    red "This workflow requires gpg 2.2+"
    exit 1
fi

need_passphrase=false
for arg in $@; do
    case $arg in
        "--export-secret-keys")
            need_passphrase=true
            ;;
        "--import")
            need_passphrase=true
            ;;
        "--quick-gen-key")
            need_passphrase=true
            ;;
        "--quick-add-key")
            need_passphrase=true
            ;;
        "--gen-revoke")
            need_passphrase=true
            ;;
        *)
            ;;
    esac
done

if $need_passphrase; then
    exec gpg --batch --pinentry-mode loopback --passphrase '' "$@"
else
    exec gpg "$@"
fi
